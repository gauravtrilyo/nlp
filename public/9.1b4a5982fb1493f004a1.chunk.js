webpackJsonp([9],{"./app/containers/AgentPage/constants.js":function(e,t,a){"use strict";a.d(t,"a",function(){return n}),a.d(t,"c",function(){return s}),a.d(t,"d",function(){return o}),a.d(t,"e",function(){return i}),a.d(t,"l",function(){return r}),a.d(t,"g",function(){return l}),a.d(t,"f",function(){return d}),a.d(t,"m",function(){return g}),a.d(t,"i",function(){return c}),a.d(t,"h",function(){return u}),a.d(t,"n",function(){return p}),a.d(t,"b",function(){return _}),a.d(t,"k",function(){return P}),a.d(t,"j",function(){return f}),a.d(t,"o",function(){return h}),a.d(t,"p",function(){return y}),a.d(t,"r",function(){return m}),a.d(t,"q",function(){return I});var n="AgentPage/CHANGE_AGENT_DATA",s="AgentPage/CHANGE_WEBHOOK_DATA",o="AgentPage/CHANGE_POSTFORMAT_DATA",i="AgentPage/RESET_AGENT_DATA",r="AgentPage/LOAD_AGENT",l="AgentPage/LOAD_AGENT_SUCCESS",d="AgentPage/LOAD_AGENT_ERROR",g="AgentPage/LOAD_WEBHOOK",c="AgentPage/LOAD_WEBHOOK_SUCCESS",u="AgentPage/LOAD_WEBHOOK_ERROR",p="AgentPage/REMOVE_AGENT_FALLBACK",_="AgentPage/LOAD_POSTFORMAT",P="AgentPage/LOAD_POSTFORMAT_SUCCESS",f="AgentPage/LOAD_POSTFORMAT_ERROR",h="AgentPage/CHANGE_AGENT_SETTINGS_DATA",y="AgentPage/LOAD_AGENT_SETTINGS",m="AgentPage/LOAD_AGENT_SETTINGS_SUCCESS",I="AgentPage/LOAD_AGENT_SETTINGS_ERROR"},"./app/containers/AgentPage/reducer.js":function(e,t,a){"use strict";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments[1];switch(t.type){case i.a:var a=null;return"fallbackResponses"===t.payload.field?a=e.updateIn(["agentData","fallbackResponses"],function(e){return e.concat(t.payload.value)}):"agentName"===t.payload.field?a=e.setIn(["agentData",t.payload.field],t.payload.value).setIn(["webhookData","agent"],t.payload.value).setIn(["postFormatData","agent"],t.payload.value):"usePostFormat"===t.payload.field?(t.payload.value&&""===e.getIn(["postFormatData","postFormatPayload"])&&(a=e.setIn(["postFormatData","postFormatPayload"],r.a.defaultPostFormat.defaultMessage)),a=e.setIn(["agentData",t.payload.field],t.payload.value)):a=e.setIn(["agentData",t.payload.field],t.payload.value),t.initialLoad||(a=a.set("touched",!0)),a;case i.c:return"webhookPayloadType"===t.payload.field&&"None"===t.payload.value?("JSON"===e.webhookData.webhookPayloadType&&(e=e.set("oldPayloadJSON",e.webhookData.webhookPayload)),"XML"===e.webhookData.webhookPayloadType&&(e=e.set("oldPayloadXML",e.webhookData.webhookPayload)),e.setIn(["webhookData","webhookPayload"],"").setIn(["webhookData",t.payload.field],t.payload.value).set("touched",!0)):("webhookPayloadType"===t.payload.field&&("JSON"===t.payload.value&&"JSON"!==e.webhookData.webhookPayloadType&&("XML"===e.webhookData.webhookPayloadType&&(e=e.set("oldPayloadXML",e.webhookData.webhookPayload)),e=e.setIn(["webhookData","webhookPayload"],e.oldPayloadJSON)),"XML"===t.payload.value&&"XML"!==e.webhookData.webhookPayloadType&&("JSON"===e.webhookData.webhookPayloadType&&(e=e.set("oldPayloadJSON",e.webhookData.webhookPayload)),e=e.setIn(["webhookData","webhookPayload"],e.oldPayloadXML))),e.setIn(["webhookData",t.payload.field],t.payload.value).set("touched",!0));case i.d:return e.setIn(["postFormatData",t.payload.field],t.payload.value);case i.b:return e.set("loading",!0).set("error",!1);case i.k:return e.set("loading",!1).set("error",!1).set("postFormatData",t.postFormat);case i.j:return e.set("loading",!1);case i.e:return l;case i.l:return e.set("loading",!0).set("error",!1);case i.g:return e.set("loading",!1).set("error",!1).set("agentData",t.agent).setIn(["webhookData","agent"],t.agent.agentName).setIn(["postFormatData","agent"],t.agent.agentName).set("oldAgentData",t.agent);case i.f:return e.set("error",t.error).set("loading",!1);case i.m:return e.set("loading",!0).set("error",!1);case i.i:return e.set("loading",!1).set("error",!1).set("webhookData",t.webhook).set("oldWebhookData",t.webhook);case i.h:return e.set("loading",!1);case i.n:return e.updateIn(["agentData","fallbackResponses"],function(e){return e.filter(function(e,a){return a!==t.index})});case i.o:return t.initialLoad?e.setIn(["agentSettingsData",t.payload.field],t.payload.value):e.setIn(["agentSettingsData",t.payload.field],t.payload.value).set("touched",!0);case i.p:return e.set("loading",!0).set("error",!1);case i.r:return e.set("loading",!1).set("error",!1).set("agentSettingsData",t.agentSettings);case i.q:return e.set("loading",!1);default:return e}}Object.defineProperty(t,"__esModule",{value:!0});var s=a("./node_modules/seamless-immutable/seamless-immutable.development.js"),o=a.n(s),i=a("./app/containers/AgentPage/constants.js"),r=a("./app/containers/IntentPage/messages.js"),l=o()({agentData:{agentName:"",description:"",domainClassifierThreshold:50,fallbackResponses:[],useWebhook:!1,usePostFormat:!1,extraTrainingData:!1,enableModelsPerDomain:!0},webhookData:{agent:"",webhookUrl:"",webhookVerb:"GET",webhookPayloadType:"None",webhookPayload:""},postFormatData:{agent:"",postFormatPayload:'{\n\t"textResponse" : "{{ textResponse }}"\n}'},agentSettingsData:{rasaURL:"",ducklingURL:"",ducklingDimension:[],spacyPretrainedEntities:[],domainClassifierPipeline:[],intentClassifierPipeline:[],entityClassifierPipeline:[]},oldPayloadJSON:'{\n\t"text": "{{text}}",\n\t"intent": {{{JSONstringify intent}}},\n\t"slots": {{{JSONstringify slots}}}\n}',oldPayloadXML:'<?xml version="1.0" encoding="UTF-8"?>\n<data>\n\t<text>{{text}}</text>\n\t<intent>{{{toXML intent}}}</intent>\n\t<slots>{{{toXML slots}}}</slots>\n</data>',oldAgentData:null,oldWebhookData:null,touched:!1});t.default=n},"./app/containers/IntentPage/messages.js":function(e,t,a){"use strict";var n=a("./node_modules/react-intl/lib/index.es.js");t.a=a.i(n.c)({createIntentTitle:{id:"containers.IntentPage.create_intent.title",defaultMessage:"Creating New Intent"},defaultPostFormat:{id:"containers.IntentPage.create_intent.defaultPostFormat",defaultMessage:'{ "textResponse" : "{{ textResponse }}" }'},createIntentDescription:{id:"containers.IntentPage.create_intent.description",defaultMessage:'Intents are grouped user sayings with a similar purpose. For example a user may say, "I want to order a cheese pizza" and that may be labeled with an intent of "Order Pizza".'},editIntentTitle:{id:"containers.IntentPage.create_intent.title",defaultMessage:"Editing the intent"},editIntentDescription:{id:"containers.IntentPage.create_intent.description",defaultMessage:"Please make the desired changes in your intent and click on the update button"},agent:{id:"containers.IntentPage.create_intent.agent",defaultMessage:"Agent"},domain:{id:"containers.IntentPage.create_intent.domain",defaultMessage:"Domain"},intentName:{id:"containers.IntentPage.create_intent.intentName",defaultMessage:"Intent Name"},intentNamePlaceholder:{id:"containers.IntentPage.create_intent.intent_name_placeholder",defaultMessage:"Type a name here"},actionDescription:{id:"containers.IntentPage.create_intent.actionDescription",defaultMessage:"Action description"},actionDescriptionPlaceholder:{id:"containers.IntentPage.create_intent.action_description_placeholder",defaultMessage:'Type the description of the action here, for example "To ask for a resource"'},userSaysTitle:{id:"containers.IntentPage.create_intent.user_says",defaultMessage:"User Says"},userSaysExample:{id:"containers.IntentPage.create_intent.user_says_example",defaultMessage:"Example: How's the weather looking for today?"},agentResponsesTitle:{id:"containers.IntentPage.create_intent.agent_responses_title",defaultMessage:"Agent Responses"},agentResponseExample:{id:"containers.IntentPage.create_intent.agent_responses_example",defaultMessage:"The {{slots.location.name}} you said is {{slots.location.value}} but you originally said {{slots.location.sourceText}}"},userSaysInput:{id:"containers.IntentPage.create_intent.user_says_input",defaultMessage:"Type sample dialogue and press Enter"},responsesInput:{id:"containers.IntentPage.create_intent.responses_input",defaultMessage:"Type an agent response and press Enter"},userSaysSearch:{id:"containers.IntentPage.create_intent.user_says_search",defaultMessage:"Search user says"},slots:{id:"containers.IntentPage.create_intent.slots",defaultMessage:"Slots"},slotNameTooltip:{id:"containers.IntentPage.create_intent.slot_name_tooltip",defaultMessage:"This is one instance of the intent you named upwards."},slotEntityTooltip:{id:"containers.IntentPage.create_intent.slot_entity_tooltip",defaultMessage:"Synonyms will help the agent to recognize this example in several different ways."},slotIsRequiredTooltip:{id:"containers.IntentPage.create_intent.slot_is_required_tooltip",defaultMessage:"Flag to indicate if the user should fulfilled this slot before sending intent."},slotIsListTooltip:{id:"containers.IntentPage.create_intent.slot_is_list_tooltip",defaultMessage:"Flag to indicate if this slot should be grouped in a list of elements."},slotPromptTooltip:{id:"containers.IntentPage.create_intent.slot_prompt_tooltip",defaultMessage:"Flag to indicate if this slot should be grouped in a list of elements."},slotNameTitle:{id:"containers.IntentPage.create_intent.slot_name_title",defaultMessage:"Slot Name"},slotEntityTitle:{id:"containers.IntentPage.create_intent.slot_entity_title",defaultMessage:"Entity"},slotIsRequiredTitle:{id:"containers.IntentPage.create_intent.slot_is_required_title",defaultMessage:"Required?"},slotIsListTitle:{id:"containers.IntentPage.create_intent.slot_is_list_title",defaultMessage:"List?"},slotPromptTitle:{id:"containers.IntentPage.create_intent.slot_prompt_title",defaultMessage:"Text Prompt"},slotNamePlaceholder:{id:"containers.IntentPage.create_intent.slot_name_placeholder",defaultMessage:"Add Slot"},slotEntityPlaceholder:{id:"containers.IntentPage.create_intent.slot_entity_placeholder",defaultMessage:"Select Entity"},slotPromptPlaceholder:{id:"containers.IntentPage.create_intent.slot_name_placeholder",defaultMessage:"Add Text Prompt"},createButton:{id:"containers.IntentPage.create_intent.create_button",defaultMessage:"+ Create"},editButton:{id:"containers.IntentPage.create_intent.edit_button",defaultMessage:"+ Update"},emptyEntityList:{id:"containers.IntentPage.create_agent.empty_entity_list",defaultMessage:"Please select an agent first"},noEntitiesInAgent:{id:"containers.IntentPage.create_agent.empty_entity_list",defaultMessage:"No entities created"},createEntity:{id:"containers.IntentPage.create_agent.create_entity",defaultMessage:"+ Create Entity"},emptySlotList:{id:"containers.IntentPage.create_agent.empty_slot_list",defaultMessage:"You haven't created slots"},webhook:{id:"containers.IntentPage.create_agent.webhook",defaultMessage:"Webhook Url"},webhookPlaceholder:{id:"containers.IntentPage.create_agent.webhook_placeholder",defaultMessage:"example: http://localhost:4500"},successMessage:{id:"containers.IntentPage.create_agent.success_message",defaultMessage:"Intent created"},successMessageEdit:{id:"containers.IntentPage.create_agent.success_message",defaultMessage:"Intent updated"},missingResponsesMessage:{id:"containers.IntentPage.create_agent.missing_response_message",defaultMessage:"Please add at least one agent response"},missingWebhookMessage:{id:"containers.IntentPage.create_agent.missing_webhook_message",defaultMessage:"Please add at the webhook url"},missingPostFormatPayload:{id:"containers.IntentPage.create_agent.missing_postFormat_payload",defaultMessage:"Please add a POST format response for the intent, default one has been added."},invalidSlotNameInPrompt:{id:"containers.IntentPage.create_agent.invalid_slot_name_prompt",defaultMessage:"Please verify that every text prompt for required slots are referencing valid slots names"},invalidSlotNameInResponse:{id:"containers.IntentPage.create_agent.invalid_slot_name_response",defaultMessage:"Please verify that every agent response are referencing valid slots names"},webhookDescription:{id:"containers.IntentPage.create_agent.webhook_description",defaultMessage:"A webhook will help you to process the parsed text by the agent in order to complete you business logic."},webhookVerb:{id:"containers.IntentPage.create_agent.webhook_verb",defaultMessage:"Method"},webhookUrl:{id:"containers.IntentPage.create_agent.webhook_url",defaultMessage:"URL"},webhookUrlPlaceholder:{id:"containers.IntentPage.create_agent.webhook_url_placeholder",defaultMessage:"http://143.110.191.95:3010"},webhookPayloadType:{id:"containers.IntentPage.create_agent.webhook_payload_type",defaultMessage:"Body Type"},webhookPayload:{id:"containers.IntentPage.create_agent.webhook_payload",defaultMessage:"Body"},missingWebhookUrl:{id:"containers.IntentPage.create_agent.missing_webhook_url",defaultMessage:"Please add a webhook url for your webhook"},useWebhook:{id:"containers.IntentPage.create_agent.use_webhook",defaultMessage:"Webhook Definition"},usePostFormat:{id:"containers.IntentPage.create_agent.use_postFormat",defaultMessage:"Response Definition"},postFormat:{id:"containers.IntentPage.create_agent.postFormat",defaultMessage:"Response definition"},newSlotButton:{id:"containers.IntentPage.create_agent.new_slot_button",defaultMessage:"New +"},defaultNewSlotName:{id:"containers.IntentPage.create_agent.default_new_slot_name",defaultMessage:"New slot"},checkEntitiesOfSlots:{id:"containers.IntentPage.create_agent.default_new_slot_name",defaultMessage:"Please verify that every slot have an entity value"},checkDomain:{id:"containers.IntentPage.create_agent.check_domain",defaultMessage:"Please verify that the intent has a domain selected"}})}});